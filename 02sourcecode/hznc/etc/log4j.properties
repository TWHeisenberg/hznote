# 指明了根日志的   输出级别    和   输出目的地
# 输出级别
#   输出级别有5个,对应日志的级别 如果选择error,那么会输出错误和致命的日志
#   如果选择info 那么会输出 info 警告 错误 致命级别的日志
#   如果选择debug,那么所有级别都输出
#注意 （ DEBUG < INFO < WARN < ERROR < FATAL ） 设为OFF可以关闭日志
# 输出目的地
#   我们可以选择多个目的地,我们可以选择控制台 文件
#   也可以全部选择,两个地址都输出
log4j.rootLogger=info,HFILE2,console1

# 输出到控制台
# appender:目的地 console是变量       org.apache.log4j.ConsoleAppender 代表的是控制台
log4j.appender.console1=org.apache.log4j.ConsoleAppender
log4j.appender.console1.target=System.out
# layout格式变量    org.apache.log4j.PatternLayout 代表的是输出时有格式
log4j.appender.console1.layout=org.apache.log4j.PatternLayout
#ConversionPattern具体格式变量   %d{yy/MM/dd HH:mm:ss} %p %c %M(): %m%n 代表的是具体的格式
log4j.appender.console1.layout.ConversionPattern=%-d{yyyy/MM/dd HH:mm:ss} %-5p [%t] - %m%n


#输出到文件
# HFILE变量 org.apache.log4j.RollingFileAppender代表输出到文件中
log4j.appender.HFILE2=org.apache.log4j.RollingFileAppender
# file变量 log.log是路径加文件名 这次试用的是相对路径
log4j.appender.HFILE2.File=logs/realtime_spif_run.log
# 日志文件最大kb数
log4j.appender.HFILE2.MaxFileSize=100MB
# layout格式变量    org.apache.log4j.SimpleLayout 简单格式
log4j.appender.HFILE2.layout=org.apache.log4j.PatternLayout
log4j.appender.HFILE2.layout.ConversionPattern=%-d{yyyy/MM/dd HH:mm:ss} %-5p [%t] - %m%n


